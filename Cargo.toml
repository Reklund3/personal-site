[package]
name = "zero2prod"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[[bin]]
path = "src/main.rs"
name = "zero2prod-exec"

[dependencies]
anyhow = "1"
actix-session = { version = "0.8", features = ["redis-rs-tls-session"] }
actix-web = { version = "4", optional = true, features = ["macros"] }
actix-files = { version = "0.6", optional = true }
actix-web-flash-messages = { version = "0.4", features = ["cookies"] }
actix-web-lab = { version = "0.20", optional = true }
argon2 = { version = "0.4", features = ["std"] }
#askama = "0.12.1"
base64 = "0.21"
console_error_panic_hook = "0.1"
cfg-if = "1"
chrono = { version = "0.4", default-features = false, features = ["clock"]}
config = "0.13"
http = { version = "1.0.0", optional = true }
htmlescape = "0.3"
leptos = { version = "0.5", features = ["ssr"] }
leptos_actix = { version = "0.5", optional = true }
leptos_meta = { version = "0.5"}
leptos_router = { version = "0.5" }
log = "0.4"
rand = { version = "0.8", features = ["std_rng"]}
secrecy = {  version = "0.8", features = ["serde"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde-aux = "4.2"
thiserror = "1"
tokio = { version = "1.29.1", features = ["macros", "rt-multi-thread"] }
tracing = { version = "0.1", features = ["log"] }
tracing-actix-web = "0.7"
tracing-bunyan-formatter = "0.3"
tracing-log = "0.1"
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
urlencoding = "2"
unicode-segmentation = "1.10.1"
uuid = {version = "1.4", features = ["v4", "serde"]}
validator = "0.16"
wasm-bindgen = "0.2.89"

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
    "dep:actix-files",
    "dep:actix-web",
    "dep:actix-web-lab",
    "dep:leptos_actix",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
]

[dependencies.sqlx]
version = "0.7"
default-features = false
features = [
    "runtime-tokio-rustls",
    "macros",
    "postgres",
    "uuid",
    "chrono",
    "migrate"
]

[dependencies.reqwest]
version = "0.11"
default-features = false
features = [
    "json",
    "rustls-tls",
    "cookies"
]

[dev-dependencies]
claims = "0.7"
fake = "~2.3"
linkify = "0.10"
once_cell = "1.18"
quickcheck = "0.9.2"
quickcheck_macros = "0.9.1"
serde_json = "1.0"
wiremock = "0.5"

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.cargo-all-features]
denylist = ["actix-files", "actix-web", "leptos_actix"]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "zero2prod"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"